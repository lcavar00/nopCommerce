@model PriceModel

@{
    const string hideInfoBlockAttributeName = "PricePage.HideInfoBlock";
    var hideInfoBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideInfoBlockAttributeName);

    const string hidePricesBlockAttributeName = "PricePage.HidePricesBlock";
    var hidePricesBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hidePricesBlockAttributeName, defaultValue: true);

    const string hideRentalBlockAttributeName = "PricePage.HideRentalBlock";
    var hideRentalBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideRentalBlockAttributeName, defaultValue: true);

    const string hideRecurringBlockAttributeName = "PricePage.HideRecurringBlock";
    var hideRecurringBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideRecurringBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "price-advanced-mode" })
                </div>
                @if (!Model.IsLoggedInAsVendor)
                {
                    <button type="button" class="btn btn-info pull-left margin-l-10" id="price-editor-settings" data-toggle="modal" data-target="#pricesettings-window">
                        <i class="fa fa-gear"></i>
                        @T("Admin.Configuration.Settings.PriceEditor.Button")
                    </button>
                }
            </div>
        </div>
        
        <nop-panels id="price-panels">
            <nop-panel asp-name="price-info" asp-icon="fa fa-info" asp-title="@T("Admin.Catalog.Prices.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-panel>
            <nop-panel asp-name="price-price" asp-icon="fa fa-usd" asp-title="@T("Admin.Catalog.Prices.Price")" asp-hide-block-attribute-name="@hidePricesBlockAttributeName" asp-hide="@hidePricesBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Prices", Model)</nop-panel>
            <nop-panel asp-name="price-rental" asp-icon="fa fa-calendar" asp-title="@T("Admin.Catalog.Prices.Rental")" asp-hide-block-attribute-name="@hideRentalBlockAttributeName" asp-hide="@hideRentalBlock" asp-advanced="@(!Model.PriceEditorSettingsModel.IsRental)">@await Html.PartialAsync("_CreateOrUpdate.Rental", Model)</nop-panel>
            <nop-panel asp-name="price-recurring" asp-icon="fa fa-repeat" asp-title="@T("Admin.Catalog.Prices.RecurringPrice")" asp-hide-block-attribute-name="@hideRecurringBlockAttributeName" asp-hide="@hideRecurringBlock" asp-advanced="@(!Model.PriceEditorSettingsModel.RecurringPrice)">@await Html.PartialAsync("_CreateOrUpdate.Recurring", Model)</nop-panel>
            
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZonesExtension.PriceDetailsBlock, additionalData = Model })
        </nop-panels>
    </div>
</div>